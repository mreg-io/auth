.api:
  extends:
    - .db
    - .go
  image: golang:${GO_VERSION}
  variables:
    GOPATH: $CI_PROJECT_DIR/api/.go
  before_script:
    - !reference [.go, before_script]
    - mkdir -p api/.go
    - cd api
  cache:
    paths:
      - api/.go/pkg/mod/
    policy: pull-push

api:dep:
  extends:
    - .api
  stage: .pre
  script:
    - go mod download
  cache:
    policy: pull-push

api:build:
  extends:
    - .api
  stage: build
  needs: [api:dep]
  script:
    - go build ./...

api:lint:
  extends:
    - .api
  needs: [api:build]
  image:
    name: golangci/golangci-lint
    entrypoint: [""]
  script:
    - golangci-lint run
  allow_failure:
    exit_codes: 1
  artifacts:
    paths:
      - api/gl-code-quality-report.json
    reports:
      codequality: api/gl-code-quality-report.json

api:test:
  extends:
    - .api
  needs: [api:build, flyway:migrate]
  variables:
    DATABASE_URL: "postgresql://$FLYWAY_USER:$FLYWAY_PASSWORD@my-registry-2412.j77.cockroachlabs.cloud:26257/auth_ci?application_name=auth_api_test&search_path=$DATABASE_SCHEMA"
  script:
    - >-
      go run gotest.tools/gotestsum@latest --junitfile report.xml --format testname
      -- -race -coverprofile=coverage.txt -covermode=atomic ./...
  after_script:
    - cd api
    - go run github.com/boumenot/gocover-cobertura@latest < coverage.txt > coverage.xml
  artifacts:
    paths:
      - api/report.xml
      - api/coverage.xml
    reports:
      junit: api/report.xml
      coverage_report:
        coverage_format: cobertura
        path: api/coverage.xml
