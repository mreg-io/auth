# Reference: https://docs.gitlab.com/ee/ci/yaml/workflow.html#switch-between-branch-pipelines-and-merge-request-pipelines
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

default:
  tags:
    - docker
    - arm64

# Run all pipelines if one of the following criteria met
# - a commit pushed to default branch
# - a merge request targeting default branch
# - any changes in root directory
# noinspection YAMLSchemaValidation,YAMLSchemaValidation,YAMLSchemaValidation
.run_all:
  rules: &run_all_rules
    - changes: [ "*.gitlab-ci.yml", ".gitignore", "CODEOWNERS" ]
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_TITLE =~ /^Draft:/
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH

# Specify project-wide database settings
.db:
  variables:
    DATABASE_SCHEMA: commit_$CI_COMMIT_SHORT_SHA

# Specify project-wide golang version and private packages
.go:
  variables:
    GO_VERSION: 1.23.1
    GOPRIVATE: buf.build/gen/go
  before_script:
    - cat $BUF_NETRC > $HOME/.netrc

# Specify project-wide node private packages
.node:
  before_script:
    - cat $BUF_NPMRC > $HOME/.npmrc

include:
  - local: migrations/.gitlab-ci.yml
    rules:
      - changes: [ migrations/**/* ]
      # Make sure migration jobs run when api:test is run
      - changes: [ api/**/* ]
      - *run_all_rules
  - local: api/.gitlab-ci.yml
    rules:
      - changes: [ api/**/* ]
      - *run_all_rules
  - local: web/.gitlab-ci.yml
    rules:
      - changes: [ web/**/* ]
      - *run_all_rules
  - local: Security.gitlab-ci.yml
    rules:
      - *run_all_rules
